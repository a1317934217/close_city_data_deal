# coding:utf-8
"""
@file: quantitativeAnalysis.py
@author: wu hao
@time: 2023/4/11 14:51
@env: 封城数据处理
@desc:
@ref:
"""
import matplotlib
import pandas as pd
import csv
import datetime
import networkx as nx
import numpy as np
import pandas as pd
# coding=utf-8
from matplotlib import pyplot as plt
from matplotlib.font_manager import FontProperties
from matplotlib.ticker import FuncFormatter, MaxNLocator
import matplotlib.pyplot as plt
from matplotlib.font_manager import FontProperties
from matplotlib.ticker import FuncFormatter, MaxNLocator
# 根据路径画图
from numpy import array
from sklearn.preprocessing import MinMaxScaler



# 日期时间递增 格式yyyymmdd
def getdaylist(beginDate,endDate):
    beginDate = datetime.datetime.strptime(str(beginDate), "%Y%m%d")
    endDate = datetime.datetime.strptime(str(endDate), "%Y%m%d")
    dayList = []
    while beginDate <= endDate:
        dayList.append(datetime.datetime.strftime(beginDate, "%Y%m%d"))
        beginDate += datetime.timedelta(days=+1)
    return dayList



#一阶 西安
#西安 封城时间 20211223 20220115  比较时间2021/12/09 -2022/1/31(接近春节)  封城22天  阈值选取为0.08 确定！

first_average_xian =  [1.2941176470588236, 1.2941176470588236, 1.2426470588235294, 1.0441176470588236, 1.2941176470588236, 1.1838235294117647, 0.9632352941176471, 0.6166666666666667, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.4583333333333333, 0.25833333333333336, 0.25833333333333336, 0.11666666666666667, 0.09166666666666666, 0.041666666666666664, 0.041666666666666664, 0.041666666666666664, 0.058333333333333334, 0.041666666666666664, 0.058333333333333334, 0.075, 0.058333333333333334, 0.058333333333333334, 0.058333333333333334, 0.041666666666666664, 0.041666666666666664, 0.047619047619047616, 0.047619047619047616, 0.047619047619047616, 0.047619047619047616, 0.047619047619047616, 0.047619047619047616, 0.06666666666666667, 0.17142857142857143, 0.11428571428571428, 0.19047619047619047, 0.45714285714285713, 0.5047619047619047, 0.45714285714285713, 0.5904761904761905, 0.475, 0.5333333333333333, 0.7833333333333333, 0.6416666666666667, 1.1333333333333333, 1.1916666666666667, 1.1583333333333334, 1.0833333333333333, 1.1911764705882353, 1.3602941176470589, 1.1544117647058822, 1.05]
first_degree_xian = [15, 15, 15, 13, 15, 12, 11, 9, 9, 9, 9, 8, 6, 6, 3, 2, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 3, 3, 5, 8, 8, 9, 8, 9, 10, 9, 13, 14, 14, 12, 12, 14, 13, 12]
first_edge_number_xian =  [24, 24, 24, 22, 24, 21, 20, 17, 16, 16, 16, 15, 11, 11, 8, 7, 4, 4, 4, 5, 4, 5, 6, 5, 5, 5, 4, 4, 4, 4, 4, 4, 4, 4, 5, 9, 7, 9, 13, 14, 13, 15, 16, 16, 18, 15, 19, 21, 20, 18, 21, 26, 23, 19]
#默认为平均最短路径长度
first_nature_connecty_xian =  [1.9743841188140179, 1.9743841188140179, 1.9794440110314162, 1.7819942468759749, 1.9743841188140179, 1.5991926462962402, 1.5241840115529424, 1.381999976189085, 1.2446019666056811, 1.2446019666056811, 1.2446019666056811, 1.1709148242228322, 0.8047207631772286, 0.8047207631772286, 0.5323882088121752, 0.41229272554274593, 0.2492346807666685, 0.2492346807666685, 0.2492346807666685, 0.3092705809536018, 0.2492346807666685, 0.30927058095360166, 0.36590539555263996, 0.30927058095360166, 0.30927058095360166, 0.30927058095360166, 0.2492346807666685, 0.2492346807666685, 0.26383444744832635, 0.26383444744832635, 0.26383444744832635, 0.26383444744832635, 0.26383444744832635, 0.26383444744832635, 0.3268496830444139, 0.6952216586122744, 0.5099335122438023, 0.7187126550224201, 1.1656999481452148, 1.2100308573595142, 1.0818234631959285, 1.2861534098786402, 1.2135065947484633, 1.2625859784356872, 1.4923870865609916, 1.1501554164263184, 1.4943661705751574, 1.7011782571730725, 1.6239072901857254, 1.396376569686689, 1.432476561573188, 1.958294568257178, 1.868055866355099, 1.5006083906054135]


#一阶 石家庄
#石家庄 封城时间 2021/1/7——2021/1/29日  比较时间2021/01/01 -2021/05/08(接近春节)  封城23天  阈值选取为0.04 确定！

first_average = [4.217948717948718, 3.0128205128205128, 3.3974358974358974, 2.5384615384615383, 1.0666666666666667, 2.141025641025641, 1.8717948717948718, 1.4615384615384615, 1.5454545454545454, 1.5454545454545454, 1.4393939393939394, 1.3484848484848484, 1.2181818181818183, 1.2181818181818183, 1.3272727272727274, 1.1666666666666667, 1.2, 1.1666666666666667, 1.2, 1.3636363636363635, 1.4444444444444444, 1.393939393939394, 1.4727272727272727, 1.3636363636363635, 1.5272727272727273, 1.0363636363636364, 1.3484848484848484, 1.303030303030303, 1.0, 1.303030303030303, 1.0888888888888888, 1.641025641025641, 1.5256410256410255, 1.5256410256410255, 1.5256410256410255, 1.641025641025641, 1.641025641025641, 1.2564102564102564, 1.641025641025641, 1.2564102564102564, 1.3333333333333333, 1.2424242424242424, 1.3636363636363635, 1.5, 1.8076923076923077, 1.564102564102564, 1.4615384615384615, 2.08974358974359, 2.128205128205128, 2.128205128205128, 2.128205128205128, 2.282051282051282, 2.41025641025641, 2.41025641025641, 2.6923076923076925, 2.7564102564102564, 2.7564102564102564, 3.3076923076923075, 2.8974358974358974, 2.5641025641025643, 3.128205128205128, 2.6923076923076925, 2.91025641025641, 3.0128205128205128, 3.2435897435897436, 2.8974358974358974, 3.371794871794872, 3.0128205128205128, 3.0128205128205128, 3.0128205128205128, 3.3076923076923075, 3.4358974358974357, 3.08974358974359, 3.3076923076923075, 3.2435897435897436, 3.5256410256410255, 3.5256410256410255, 3.5256410256410255, 3.58974358974359, 3.371794871794872, 3.5256410256410255, 3.5256410256410255, 3.4615384615384617, 3.5256410256410255, 3.6923076923076925, 3.8461538461538463, 3.5384615384615383, 4.012820512820513, 3.5256410256410255, 3.8076923076923075, 3.5256410256410255, 4.153846153846154, 5.089743589743589, 4.6923076923076925, 4.833333333333333, 4.769230769230769, 4.397435897435898, 4.397435897435898, 4.397435897435898, 4.564102564102564, 3.8333333333333335, 3.9871794871794872, 3.9871794871794872, 4.115384615384615, 3.9615384615384617, 4.397435897435898, 4.564102564102564, 4.089743589743589, 4.564102564102564, 4.115384615384615, 4.128205128205129, 3.9871794871794872, 4.256410256410256, 4.256410256410256, 3.9615384615384617, 4.256410256410256, 3.8461538461538463, 3.9615384615384617, 4.423076923076923, 4.910256410256411, 7.205128205128205, 6.102564102564102, 6.538461538461538, 5.641025641025641, 5.641025641025641, 5.0, 4.564102564102564, 4.397435897435898]
first_degree = [10, 8, 10, 7, 3, 5, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 4, 4, 4, 4, 5, 5, 5, 5, 6, 6, 6, 6, 6, 7, 6, 7, 7, 6, 7, 7, 7, 7, 8, 7, 7, 7, 8, 8, 7, 8, 7, 9, 9, 9, 8, 8, 9, 9, 8, 9, 9, 9, 8, 10, 9, 9, 9, 10, 10, 10, 10, 10, 10, 10, 10, 10, 9, 10, 10, 10, 9, 9, 10, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 11, 11, 10, 10, 11, 10, 10, 9]
first_edge_number = [40, 31, 34, 28, 10, 24, 21, 19, 18, 18, 17, 16, 13, 13, 14, 13, 12, 13, 12, 14, 13, 16, 15, 14, 16, 13, 16, 15, 14, 15, 12, 18, 17, 17, 17, 18, 18, 16, 18, 16, 17, 14, 14, 17, 20, 20, 19, 23, 24, 24, 24, 25, 27, 27, 28, 29, 29, 34, 30, 29, 32, 28, 30, 31, 33, 30, 33, 31, 31, 31, 33, 35, 32, 33, 33, 35, 35, 35, 36, 34, 35, 35, 34, 35, 36, 37, 35, 38, 35, 37, 35, 39, 46, 43, 44, 43, 41, 41, 41, 42, 37, 38, 38, 39, 38, 41, 42, 39, 42, 39, 39, 38, 40, 40, 38, 40, 37, 38, 41, 44, 57, 52, 54, 49, 49, 45, 42, 41]
#默认为平均最短路径长度
first_nature_connecty = [4.594697943773412, 3.4784332105882894, 3.916980433008902, 2.965913906299831, 0.9588132933130848, 2.469971969709056, 2.120325946256966, 1.8638209671316526, 1.8760686386285457, 1.8760686386285457, 1.7813083952379178, 1.6526899528081183, 1.2800644381113555, 1.2800644381113595, 1.4467618238853468, 1.0416049293037337, 1.0392364051234324, 1.041604929303735, 1.0392364051234317, 1.4176902520797485, 1.4404127089248757, 1.5194801097396085, 1.5373073055890685, 1.4032153320142744, 1.8244608843836336, 1.3566178661263544, 1.6526899528081183, 1.3848382948793148, 1.3268234078671977, 1.3848382948793148, 1.3750533845922097, 1.523754433415344, 1.3998881978429942, 1.3998881978429942, 1.3998881978429942, 1.5237544334153441, 1.5237544334153441, 1.3452980337466525, 1.5237544334153441, 1.3452980337466525, 1.4716980796550387, 1.1711711513451042, 1.3912317993185748, 1.5702300040267594, 1.6667800184369985, 1.7075906840382247, 1.604454748082246, 2.1206150246250264, 2.2710628087169416, 2.239600345262844, 2.2396003452628452, 2.361547071967609, 2.8341939261871882, 2.834193926187189, 2.8930421039692695, 3.109176399549967, 3.1091763995499555, 3.8695776942095694, 3.2167447150776423, 3.27260206086063, 3.512039615089946, 2.8930421039692673, 3.214029588106907, 3.386573237513853, 3.6401662077095693, 3.246317005044428, 3.6192178627947684, 3.386573237513853, 3.3865732375138484, 3.3865732375138484, 3.752940243379523, 4.052746793853065, 3.5934894783222626, 3.752940243379522, 3.657269254262062, 4.038171938227013, 4.038171938227018, 4.038171938227013, 4.153392447971374, 3.8640655076432284, 4.038171938227013, 4.038171938227013, 3.8202555910508234, 4.038171938227013, 4.094878069484244, 4.18284613372028, 3.9256727041162653, 4.2908414735713345, 4.038171938227013, 4.236968316853311, 4.038171938227018, 4.467084745556345, 5.261023369203942, 5.023841788734133, 5.160931054924758, 4.958217220848044, 4.853616012010375, 4.853616012010375, 4.853616012010376, 4.925954813345563, 4.275735707630473, 4.384474279143508, 4.384474279143512, 4.528311510843952, 4.421860673412264, 4.8319543150942055, 4.925954813345563, 4.473404072434467, 4.910428482689487, 4.502815079992716, 4.553467243427595, 4.362613609510441, 4.66100909221053, 4.661009092210535, 4.3269102258913525, 4.661009092210529, 4.18284613372028, 4.3269102258913525, 4.760928000401193, 5.116263591328644, 6.6549461322117605, 6.154513744385182, 6.2865978287240045, 5.708091007230236, 5.748023598615255, 5.279189161594368, 4.925954813345563, 4.831954315094207]


def caculate_porpulation(list_name, first, second):
    value = (list_name[first] - list_name[second]) / list_name[first]

    print(list_name[first], list_name[second])
    print(value)

    print("======================================================================")

if __name__ == '__main__':

    # 石家庄     封城阶段        list选值为 7号是6—— 28
    # 石家庄     封城前对比阶段   list选值为 6—— 28

    # 西安     封城阶段        list选值为 7号是6—— 28
    # 西安     封城前对比阶段   list选值为 6—— 28


    listXData = getdaylist(2021,20220131)
    j=0
    for i in listXData:
        print(i,j)
        j+=1


    # 平均点连通性
    caculate_porpulation(first_average_xian, 14, 17)
    # 平均最段路径长度
    caculate_porpulation(first_nature_connecty_xian, 14, 17)
    # 边数量
    caculate_porpulation(first_edge_number_xian, 14, 17)
    # 城市度
    caculate_porpulation(first_degree_xian, 14, 17)



    # value = (first_average[28] - first_average[35])/first_average[28]
    #
    # print(first_average[28],first_average[35])
    # print(value)
    # print("======================================================================")
    #
    #
    # value = (first_nature_connecty[28] - first_nature_connecty[35])/first_nature_connecty[28]
    #
    # print(first_nature_connecty[28],first_nature_connecty[35])
    # print(value)
    # print("======================================================================")
    #
    #
    # value = (first_edge_number[28] - first_edge_number[35])/first_edge_number[28]
    #
    # print(first_edge_number[28],first_edge_number[35])
    # print(value)







































